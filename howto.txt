Setup PostgreSQL
----------------

sudo apt install postgresql-12

sudo -u postgres psql postgres

postgres=# \password postgres
Enter new password:
Enter it again:

change "peer" to "md5" in /etc/postgresql/12/main/pg_hba.conf

sudo systemctl restart postgresql

sudo systemctl status postgresql

psql -U postgres

postgres=# CREATE DATABASE test;

\c test;

CREATE TABLE rest_api_requests (
    created_at timestamp DEFAULT current_timestamp,
    remote_address cidr,
    url varchar(512),
    http_method varchar(8),
    request_body varchar(512)
);

CREATE TABLE statistics (
    date_accurate_to_the_hour timestamp NOT NULL,
    virtual_machines_number smallint NOT NULL,
    UNIQUE (date_accurate_to_the_hour)
);

\dt


Start rest api:
-----------------

sudo apt install libpq-dev

source cloud_venv/bin/activate

cd test-cloud-manager

python rest_api.py

Get token via rest api:
--------------------------
curl -i \
  -H "Content-Type: application/json" \
  -H "user: demo" \
  -H "password: test" \
  -H "project_name: demo" \
  "http://192.168.0.104:8081/api/token" ; echo

list of virtual machines
curl -i -H "Content-Type: application/json" -H "user: demo" -H "password: test" -H "project_name: demo" \
"http://192.168.0.104:8081/api/virtual_machines" ; echo

list of networks
curl -i -H "Content-Type: application/json" -H "user: <USER>" -H "password: <PASSWORD>" \
"http://192.168.0.104:8081/api/networks" ; echo

list of images
curl -i -H "Content-Type: application/json" -H "user: <USER>" -H "password: <PASSWORD>" \
"http://192.168.0.104:8081/api/images" ; echo

list of flavors
curl -i -H "Content-Type: application/json" -H "user: <USER>" -H "password: <PASSWORD>" \
"http://192.168.0.104:8081/api/flavors" ; echo

create virtual machine

curl -i -H "Content-Type: application/json" -H "user: demo" -H "password: test" -H "project_name: demo" \
 -d '{"flavor_name": "m1.nano", "image_name": "cirros-0.5.1-x86_64-disk", \
 "network_id": "1edf997e-dcde-485b-ae55-c16588c1e4f6", "virtual_machine_name": "test_3"}' \
 "http://192.168.0.104:8081/api/virtual_machines" ; echo

get stats

curl -i -H "Content-Type: application/json" -H "user: demo" -H "password: test" \
"http://192.168.0.104:8081/api/statistics/virtual_machines/number/per_day" ; echo



Openstack CLI and used http requests and responses:
------------------------------------------------------
source openrc

openstack --debug flavor list

Get token via keystone api:

curl -i \
  -H "Content-Type: application/json" \
  -d '
{ "auth": {
    "identity": {
      "methods": ["password"],
      "password": {
        "user": {
          "name": <USER>,
          "domain": { "id": "default" },
          "password": <PASSWORD>
        }
      }
    }
  }
}' \
  "http://<OPENSTACK_IP>/identity/v3/auth/tokens?nocatalog" ; echo
